import streamlit as st
import yfinance as yf
import pandas as pd
import numpy as np
from indicators import MACD, BBANDS
from functions import * 
import matplotlib.pyplot as plt
plt.style.use("default")
st.set_option('deprecation.showPyplotGlobalUse', False)

st.write("""
   # Trading strategy backtester
   ### This strategy defines entry point with MACD and exit with B. Bands
""")
st.sidebar.write("Select asset to backtest")
ticker = st.sidebar.text_input("Enter ticker here")
start = st.sidebar.text_input("Enter start date of backtest [yyyy-mm-dd]")
end = st.sidebar.text_input("Enter end date of backtest")
freq = st.sidebar.selectbox('Select Frequency', ('1h','1d'))
stop_loss = float(st.sidebar.text_input("Enter Stop Loss"))
st.sidebar.write("""
   ## MACD parameters
""")
a = st.sidebar.slider("MACD EMA 1", 10, 40, 12, 1)
b = st.sidebar.slider("MACD EMA 2", 10, 40, 26, 1)
signal = st.sidebar.slider("MACD Signal line", 0, 40, 9, 1) 

st.sidebar.write("""
    ## Bollinger Bands parameters
""")
std = st.sidebar.slider("Bollinger Bands STD", 0.01, 4.0, 1.0, 0.01)
days = st.sidebar.slider("Bollinger Bands Rolling Mean", 0, 100, 20, 1)

st.sidebar.write("Created by Juan Rossi")
st.sidebar.write("Contact me at jrossi@udesa.edu.ar")



if st.button('Perform Backtest'):
    data = create_df(ticker, False, days, std, a, b, signal, start, end, freq)
    buy_sell = buy_sell_func(data, stop_loss)
    data['Buy_signal_price'] = buy_sell[0]
    data['Sell_signal_price'] = buy_sell[1] 
    st.write("Plotting signals generated by the algorithm")
    plt.plot(data['Close'])
    #plt.gca().get_lines()[2].set_color("black")
    plt.scatter(data.index, data['Buy_signal_price'], label = 'Buy', marker = '>', color= 'green')
    plt.scatter(data.index, data['Sell_signal_price'], label = 'Sell', marker = '<', color= 'red')
    plt.title('{} MACD buy and sell signals'.format(ticker))
    st.pyplot()
    
    pl = performance(data, buy_sell)
    capital = capital_func(data, pl, 1000, False, buy_sell)
    st.write("## Capital evolution plot")
    df=pd.DataFrame({'Algorithm': capital[0], 'BuynHold':capital[1]})
    st.line_chart(df)
    plt.pie((len(pl[0]), pl[3]))
    st.write("## The algo executed {} trades of which {} were profitable, the win ratio is {}%".format(pl[3], pl[2], round(pl[1]*100,2)))
    st.write("## The total return for the period was {}%, vs Buy n' Hold {}%".format(round(capital[2]*100,2), round(capital[3]*100,2)))    
    


    




    

        








